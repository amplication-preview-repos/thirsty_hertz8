/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  MaintenanceRecord as PrismaMaintenanceRecord,
  ServiceCenter as PrismaServiceCenter,
  Vehicle as PrismaVehicle,
} from "@prisma/client";

export class MaintenanceRecordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MaintenanceRecordCountArgs, "select">
  ): Promise<number> {
    return this.prisma.maintenanceRecord.count(args);
  }

  async maintenanceRecords(
    args: Prisma.MaintenanceRecordFindManyArgs
  ): Promise<PrismaMaintenanceRecord[]> {
    return this.prisma.maintenanceRecord.findMany(args);
  }
  async maintenanceRecord(
    args: Prisma.MaintenanceRecordFindUniqueArgs
  ): Promise<PrismaMaintenanceRecord | null> {
    return this.prisma.maintenanceRecord.findUnique(args);
  }
  async createMaintenanceRecord(
    args: Prisma.MaintenanceRecordCreateArgs
  ): Promise<PrismaMaintenanceRecord> {
    return this.prisma.maintenanceRecord.create(args);
  }
  async updateMaintenanceRecord(
    args: Prisma.MaintenanceRecordUpdateArgs
  ): Promise<PrismaMaintenanceRecord> {
    return this.prisma.maintenanceRecord.update(args);
  }
  async deleteMaintenanceRecord(
    args: Prisma.MaintenanceRecordDeleteArgs
  ): Promise<PrismaMaintenanceRecord> {
    return this.prisma.maintenanceRecord.delete(args);
  }

  async getServiceCenter(
    parentId: string
  ): Promise<PrismaServiceCenter | null> {
    return this.prisma.maintenanceRecord
      .findUnique({
        where: { id: parentId },
      })
      .serviceCenter();
  }

  async getVehicle(parentId: string): Promise<PrismaVehicle | null> {
    return this.prisma.maintenanceRecord
      .findUnique({
        where: { id: parentId },
      })
      .vehicle();
  }
}
