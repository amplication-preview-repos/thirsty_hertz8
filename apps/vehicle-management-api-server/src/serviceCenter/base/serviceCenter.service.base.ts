/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ServiceCenter as PrismaServiceCenter,
  MaintenanceRecord as PrismaMaintenanceRecord,
  Vehicle as PrismaVehicle,
} from "@prisma/client";

export class ServiceCenterServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ServiceCenterCountArgs, "select">
  ): Promise<number> {
    return this.prisma.serviceCenter.count(args);
  }

  async serviceCenters(
    args: Prisma.ServiceCenterFindManyArgs
  ): Promise<PrismaServiceCenter[]> {
    return this.prisma.serviceCenter.findMany(args);
  }
  async serviceCenter(
    args: Prisma.ServiceCenterFindUniqueArgs
  ): Promise<PrismaServiceCenter | null> {
    return this.prisma.serviceCenter.findUnique(args);
  }
  async createServiceCenter(
    args: Prisma.ServiceCenterCreateArgs
  ): Promise<PrismaServiceCenter> {
    return this.prisma.serviceCenter.create(args);
  }
  async updateServiceCenter(
    args: Prisma.ServiceCenterUpdateArgs
  ): Promise<PrismaServiceCenter> {
    return this.prisma.serviceCenter.update(args);
  }
  async deleteServiceCenter(
    args: Prisma.ServiceCenterDeleteArgs
  ): Promise<PrismaServiceCenter> {
    return this.prisma.serviceCenter.delete(args);
  }

  async findMaintenanceRecords(
    parentId: string,
    args: Prisma.MaintenanceRecordFindManyArgs
  ): Promise<PrismaMaintenanceRecord[]> {
    return this.prisma.serviceCenter
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .maintenanceRecords(args);
  }

  async getVehicle(parentId: string): Promise<PrismaVehicle | null> {
    return this.prisma.serviceCenter
      .findUnique({
        where: { id: parentId },
      })
      .vehicle();
  }
}
